<template>
  <block>
    <NavBar title="发布" />
    <form bindsubmit="formSubmit" bindreset="formReset">
      <view class="zan-panel gp">
        <titleField :options="form_title" componentId="form_title" />
        <tonnageField :options="form_tonnage" componentId="form_tonnage"  wx:if="{{showTonnage}}"/>
        <!-- ------------------------ 联系人 ---------------------------- -->
        <view class="zan-cell zan-field">
          <view class="zan-cell__hd zan-field__title">联系人</view>
          <input type="text" name="contactName" value="{{user.infoName}}" class="zan-field__input zan-cell__bd" placeholder-class="zan-field__placeholder" data-component-id="form_contactName" bindinput="handleZanFieldChange"/>
        </view>
        <!-- ------------------------ 联系电话 ---------------------------- -->
        <view class="zan-cell zan-field">
          <view class="zan-cell__hd zan-field__title">联系电话</view>
          <input type="number" name="contactMobile" value="{{user.infoMobile}}" class="zan-field__input zan-cell__bd" placeholder-class="zan-field__placeholder" data-component-id="form_contactMobile" bindinput="handleZanFieldChange"/>
        </view>
        <!-- ------------------------ 品牌 ---------------------------- -->
        <view class="zan-cell zan-field" wx:if="{{showBrand}}">
          <view class="zan-cell__hd zan-field__title">品牌</view>
          <picker mode="selector" class="zan-field__input zan-cell__bd" range="{{brandRange}}" bindchange="handleZanFieldChange" data-component-id="form_brand">
            <view class="picker zan-field__input">
              {{brand}}
            </view>
          </picker>
        </view>
        <!-- ------------------------ 新旧程度 ---------------------------- -->
        <view class="zan-cell zan-field" wx:if="{{showNew}}">
          <view class="zan-cell__hd zan-field__title">新旧程度</view>
          <picker mode="selector" class="zan-field__input zan-cell__bd" range="{{newRange}}" bindchange="handleZanFieldChange" data-component-id="form_new">
            <view class="picker zan-field__input">
              {{_new}}
            </view>
          </picker>
        </view>
        <!-- ------------------------ 所在地 ---------------------------- -->
        <view class="zan-cell zan-field">
          <view class="zan-cell__hd zan-field__title">所在地</view>
          <picker mode="region" class="zan-field__input zan-cell__bd" bindchange="handleZanFieldChange" data-component-id="form_area">
            <view class="picker zan-field__input">
              {{area}}
            </view>
          </picker>
        </view>
        <detailField :options="form_detail" componentId="form_detail" />
      </view>
      <view class="imageWapper">
        <repeat for="{{files}}" key="index" index="index" item="file">
          <view class="re">
            <view class="weui-uploader__file" bindtap="previewImage" id="{{file}}">
              <image class="weui-uploader__img" src="{{file}}" mode="aspectFill" />
            </view>
            <view class="removeBtn" bindtap="removeImage" data-src="{{file}}">
              <Icon type="iconfontclose2 " class="normal" />
            </view>
          </view>
        </repeat>
        <view class="weui-uploader__input-box">
          <view class="weui-uploader__input" bindtap="chooseImage"></view>
        </view>
      </view>
      <view class="zan-btns">
        <button class="zan-btn zan-btn--primary {{ posting?'zan-btn--loading':'' }}" formType="submit">立即发布</button>
      </view>
    </form>
  </block>
</template>

<script>
import wepy from 'wepy'
import zanField from '../components/zanui/zan-field'
import base from '../mixins/base'
import router from '../mixins/router'
import input from '../mixins/input'
import NavBar from '../components/NavBar'
import Icon from '../components/Icon'
import store from '../store/utils'
import { connect } from 'wepy-redux'
import Tips from '../utils/Tips'
import postRequire from '../api/postRequire'

@connect({
  user: store.get('user')
})
export default class PostNews extends wepy.page {
  data = {
    posting: false,
    brandRange: ['中力', '杭叉', '合力', '林德', '龙工', '科朗', '丰田', '比亚迪'],
    newRange: ['全新', '9.5新', '9新', '8新', '5新', '其他'],
    brand: '',
    _new: '',
    area: '',
    postType: 1,
    form_detail: {
      name: 'detail',
      placeholder: '请填写产品的描述信息',
      type: 'textarea'
    },
    form_title: {
      name: 'title',
      title: '标题'
    },
    form_tonnage: {
      name: 'tonnage',
      title: '吨位'
    },

    files: []
  };
  components = {
    detailField: zanField,
    titleField: zanField,
    brandField: zanField,
    tonnageField: zanField,
    newField: zanField,
    areaField: zanField,
    contactNameField: zanField,
    contactMobileField: zanField,
    NavBar,
    Icon
  };
  methods = {
    previewImage: function(e) {
      let that = this
      wx.previewImage({
        current: e.currentTarget.id,
        urls: that.data.files
      })
    },
    removeImage: function(e) {
      let that = this
      let src = e.currentTarget.dataset.src
      that.files.splice(that.files.indexOf(src), 1)
      that.$apply()
    },
    /**
     * 上传图片
     */
    chooseImage() {
      let that = this
      wx.chooseImage({
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: function(res) {
          res.tempFilePaths.map(function(item) {
            that.files.push(item)
          })
          that.$apply()
        }
      })
    },
    /**
     * 提交
     */
    async formSubmit() {
      const title = this.input['form_title']
      let tonnage = (this.showTonnage && this.input['form_tonnage']) || 'undefined'
      const contactName = this.input['form_contactName'] || this.user.infoName
      const contactMobile = this.input['form_contactMobile'] || this.user.infoMobile
      let brand = (this.showBrand && this.brand) || 'undefined'
      let _new = (this.showNew && this._new) || 'undefined'
      const area = this.area
      const detail = this.input['form_detail']
      const files = this.files
      const type = this.postType
      const rules = [
        {
          value: title,
          method: 'required',
          message: '请输入标题!'
        },
        {
          value: tonnage,
          method: 'required',
          message: '请输入吨位!'
        },
        {
          value: contactName,
          method: 'required',
          message: '请输入联系人!'
        },
        {
          value: contactMobile,
          method: 'required',
          message: '输入正确的电话!'
        },
        {
          value: contactMobile,
          method: 'tel',
          message: '输入正确的电话!'
        },
        {
          value: brand,
          method: 'required',
          message: '清选择品牌!'
        },
        {
          value: _new,
          method: 'required',
          message: '请选择成新!'
        },
        {
          value: area,
          method: 'required',
          message: '请选择地区!'
        },
        {
          value: detail,
          method: 'required',
          message: '请输入描述信息!'
        },
        {
          value: files,
          method: 'required',
          message: '请上传图片!'
        },
        {
          value: files,
          method: 'rangelength',
          message: '上传1到10个图片',
          param: [0, 10]
        }
      ]
      if (!this.check(rules)) {
        return false
      }
      if (!this.posting) {
        // reset undefined field
        brand = brand === 'undefined' ? null : brand
        tonnage = tonnage === 'undefined' ? null : tonnage
        _new = _new === 'undefined' ? null : _new

        Tips.loading('上传中..')
        this.posting = true
        const fileResult = await postRequire.uploadImg(files)
        let images = fileResult.join(',')
        const data = await postRequire.add({
          title,
          tonnage,
          contactName,
          contactMobile,
          brand,
          new: _new,
          area,
          detail,
          type,
          images
        })
        if (data.status === 0) {
          Tips.success('已提交系统审核', 3000)
        }
        Tips.loaded()
        this.posting = false
        this.routeToPublicList()
      }
    },
    handleZanFieldChange(event) {
      event.componentId = event.currentTarget.dataset.componentId
      switch (event.componentId) {
      case 'form_brand':
        this.brand = this.brandRange[event.detail.value]
        break
      case 'form_new':
        this._new = this.newRange[event.detail.value]
        break
      case 'form_area':
        this.area = event.detail.value
        break
      default:
        break
      }

      console.info('[zan:field:change]', event)

      return this.$emit('zanFieldChange', event)
    },
  };
  mixins = [base, input, router];
  async onLoad() {
    await store.init()
    this.$apply()
  }
  onShow() {
    base.injectionParas.call(this)
  }
  computed={
    showNew() {
      return this.postType === '1'
    },
    showTonnage() {
      return this.postType === '1' || this.postType === '6'
    },
    showBrand() {
      return this.postType === '1' || this.postType === '6'
    }
  }
}
</script>

<style lang="scss" scoped>
@import "../zanui/panel.scss";
@import "../zanui/btn.scss";
.gp {
  border-bottom: 20rpx solid #e8e8e8;
}
.imageWapper {
  display: flex;
  padding: 30rpx 50rpx;
  padding-right: 15rpx;
  flex-wrap: wrap;
  text-align: center;
}
.re {
  position: relative;
}
.removeBtn {
  position: absolute;
  left: 65px;
  top: -10px;
  .icon {
    color: #4c4c4c;
  }
}
</style>
<style>
@import "/weui/widget/weui-cell/weui-uploader.wxss";
.weui-uploader__file {
  margin-right: 15px;
  position: relative;
}
</style>
